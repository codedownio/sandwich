"use strict";(self.webpackChunksandwich_site=self.webpackChunksandwich_site||[]).push([[699],{4954:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var s=n(6070),r=n(6113),o=n(4125);const a={id:"silent",title:"Silent Formatter"},i=void 0,l={id:"formatters/silent",title:"Silent Formatter",description:"The silent formatter prints only the run root of the test tree. It's useful when you don't want to see live output, since you'll just examine the results on disk later. It can also be used while testing in CI with the Slack formatter enabled.",source:"@site/docs/formatters/silent.md",sourceDirName:"formatters",slug:"/formatters/silent",permalink:"/sandwich/docs/formatters/silent",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/formatters/silent.md",tags:[],version:"current",frontMatter:{id:"silent",title:"Silent Formatter"},sidebar:"docs",previous:{title:"Log Saver Formatter",permalink:"/sandwich/docs/formatters/log_saver"},next:{title:"Slack Formatter",permalink:"/sandwich/docs/formatters/slack"}},c={},d=[{value:"Usage",id:"usage",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The silent formatter prints only the run root of the test tree. It's useful when you don't want to see live output, since you'll just examine the results on disk later. It can also be used while testing in CI with the ",(0,s.jsx)(t.a,{href:"./slack",children:"Slack formatter"})," enabled."]}),"\n",(0,s.jsx)("img",{alt:"Silent Formatter output",src:(0,o.A)("img/silent.png")}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(t.p,{children:["If you're using ",(0,s.jsx)(t.a,{href:"http://hackage.haskell.org/package/sandwich/docs/Test-Sandwich.html#v:runSandwichWithCommandLineArgs",children:"runSandwichWithCommandLineArgs"}),", you can simply pass ",(0,s.jsx)(t.code,{children:"--silent"})," and the silent formatter will be selected."]}),"\n",(0,s.jsxs)(t.p,{children:["If you're using the lower-level ",(0,s.jsx)(t.a,{href:"http://hackage.haskell.org/package/sandwich0.1.0.3/docs/Test-Sandwich.html#v:runSandwich",children:"runSandwich"}),", simply include the formatter in the ",(0,s.jsx)(t.a,{href:"http://hackage.haskell.org/package/sandwich/docs/Test-Sandwich-Options.html#v:optionsFormatters",children:"optionsFormatters"})," of your sandwich options."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-haskell",children:"import Test.Sandwich.Formatters.Silent\n\nmain :: IO ()\nmain = runSandwich options myTests\n  where\n    options = defaultOptions {\n      optionsFormatters = [SomeFormatter defaultSilentFormatter]\n      }\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},6113:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(758);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);