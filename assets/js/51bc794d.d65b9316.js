"use strict";(self.webpackChunksandwich_site=self.webpackChunksandwich_site||[]).push([[6580],{8523:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>h});var r=o(6070),a=o(6113);o(4125);const s={id:"log_saver",title:"Log Saver Formatter"},n=void 0,i={id:"formatters/log_saver",title:"Log Saver Formatter",description:"The log saver formatter writes test logs to a given path on disk. Note that Sandwich already writes logs to disk by default, as configured by the optionsSavedLogLevel option, so this is primarily useful when you want to save logs to another location, or with a different log level, or with a different formatter from the global one.",source:"@site/docs/formatters/log_saver.md",sourceDirName:"formatters",slug:"/formatters/log_saver",permalink:"/sandwich/docs/formatters/log_saver",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/formatters/log_saver.md",tags:[],version:"current",frontMatter:{id:"log_saver",title:"Log Saver Formatter"},sidebar:"docs",previous:{title:"Failure Report Formatter",permalink:"/sandwich/docs/formatters/failure_report"},next:{title:"Silent Formatter",permalink:"/sandwich/docs/formatters/silent"}},l={},h=[{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The log saver formatter writes test logs to a given path on disk. Note that Sandwich already writes logs to disk by default, as configured by the ",(0,r.jsx)(t.a,{href:"http://hackage.haskell.org/package/sandwich/docs/Test-Sandwich-Options.html#v:optionsSavedLogLevel",children:"optionsSavedLogLevel"})," option, so this is primarily useful when you want to save logs to another location, or with a different log level, or with a different formatter from the global one."]}),"\n",(0,r.jsxs)(t.p,{children:['It is a "secondary" formatter in the sense that it doesn\'t write to ',(0,r.jsx)(t.code,{children:"stdout"})," or ",(0,r.jsx)(t.code,{children:"stderr"}),", so it can run in the background while another formatter (such as the terminal UI or print formatters) monopolize the output streams."]}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(t.p,{children:["This formatter must be included manually in the ",(0,r.jsx)(t.a,{href:"http://hackage.haskell.org/package/sandwich/docs/Test-Sandwich-Options.html#v:optionsFormatters",children:"optionsFormatters"})," of your sandwich options."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-haskell",children:"import Test.Sandwich.Formatters.LogSaver\n\nmain :: IO ()\nmain = runSandwich options myTests\n  where\n    options = defaultOptions {\n      optionsFormatters = [SomeFormatter defaultLogSaverFormatter]\n      }\n"})}),"\n",(0,r.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(t.p,{children:["The main option to set is the ",(0,r.jsx)(t.a,{href:"http://hackage.haskell.org/package/sandwich/docs/Test-Sandwich-Formatters-LogSaver.html#v:logSaverPath",children:"logSaverPath"}),", which controls where the logs are written. This can be set to either an absolute path, or a path relative to the test run root."]}),"\n",(0,r.jsxs)(t.p,{children:["You can see the other configuration options in the ",(0,r.jsx)(t.a,{href:"http://hackage.haskell.org/package/sandwich/docs/Test-Sandwich-Formatters-LogSaver.html",children:"documentation"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},6113:(e,t,o)=>{o.d(t,{R:()=>n,x:()=>i});var r=o(758);const a={},s=r.createContext(a);function n(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);